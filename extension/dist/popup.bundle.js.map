{"version":3,"file":"popup.bundle.js","mappings":"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","sources":["webpack:///./popup.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\r\n  const positionInput = document.getElementById(\"position\");\r\n  const companyInput = document.getElementById(\"company\");\r\n  const descriptionInput = document.getElementById(\"description\");\r\n  const generateButton = document.getElementById(\"generate\");\r\n\r\n  console.log(\"Popup script loaded\");\r\n\r\n  const clearButton = document.getElementById(\"clear\");\r\n\r\n  clearButton.addEventListener(\"click\", () => {\r\n    positionInput.value = \"\";\r\n    companyInput.value = \"\";\r\n    descriptionInput.value = \"\";\r\n    updateStorage(); // Update storage to reflect the cleared inputs\r\n  });\r\n\r\n  // Listen for messages from content script\r\n  chrome.storage.sync.get([\"job_info\"], (result) => {\r\n    if (result.job_info) {\r\n      const jobDetails = result.job_info;\r\n      console.log(\"Retrieved job info from storage:\", jobDetails);\r\n      positionInput.value = jobDetails.position || \"\";\r\n      companyInput.value = jobDetails.company || \"\";\r\n      descriptionInput.value = jobDetails.description || \"\";\r\n    }\r\n  });\r\n\r\n  // Update storage when inputs change\r\n  const updateStorage = () => {\r\n    const jobDetails = {\r\n      position: positionInput.value,\r\n      company: companyInput.value,\r\n      description: descriptionInput.value,\r\n    };\r\n    chrome.storage.sync.set({ job_info: jobDetails }, () => {\r\n      console.log(\"Job info updated in storage:\", jobDetails);\r\n    });\r\n  };\r\n\r\n  positionInput.addEventListener(\"input\", updateStorage);\r\n  companyInput.addEventListener(\"input\", updateStorage);\r\n  descriptionInput.addEventListener(\"input\", updateStorage);\r\n\r\n  const replaceButtonWithSpinner = () => {\r\n    generateButton.disabled = true; // Disable the button\r\n    generateButton.innerHTML = `<svg class=\"spinner\" width=\"24px\" height=\"24px\" viewBox=\"0 0 50 50\">\r\n        <circle class=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"5\"></circle>\r\n      </svg>`;\r\n  };\r\n\r\n  // Function to restore the original button after loading\r\n  const restoreButton = () => {\r\n    generateButton.disabled = false; // Re-enable the button\r\n    generateButton.innerHTML = `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-move-right\">\r\n          <path d=\"M18 8L22 12L18 16\"/>\r\n          <path d=\"M2 12H22\"/>\r\n        </svg>`;\r\n  };\r\n\r\n  // Handle \"Generate\" button click\r\n  generateButton.addEventListener(\"click\", () => {\r\n    const jobDetails = {\r\n      position: positionInput.value,\r\n      company: companyInput.value,\r\n      description: descriptionInput.value,\r\n    };\r\n\r\n    replaceButtonWithSpinner();\r\n\r\n    // Make API call or whatever logic needed with the job details\r\n    fetch(\"http://localhost:5000/generate\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(jobDetails),\r\n    })\r\n      .then((response) => {\r\n        // Check if the response status indicates an error\r\n        if (!response.ok) {\r\n          return response.json().then((data) => {\r\n            // Throw an error to be caught in the catch block\r\n            throw new Error(data.error || \"An unknown error occurred\");\r\n          });\r\n        }\r\n        return response.json(); // Parse the JSON if the response is okay\r\n      })\r\n      .then((data) => {\r\n        chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\r\n          chrome.tabs.sendMessage(tabs[0].id, {\r\n            type: \"show_toast\",\r\n            details: jobDetails,\r\n            message: data.message,\r\n            error: false,\r\n          });\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\r\n          chrome.tabs.sendMessage(tabs[0].id, {\r\n            type: \"show_toast\",\r\n            details: jobDetails,\r\n            message: error.message,\r\n            error: true,\r\n          });\r\n        });\r\n      })\r\n      .finally(() => {\r\n        // Re-enable the button after the request is complete\r\n        restoreButton();\r\n      });\r\n  });\r\n});\r\n"],"names":["document","addEventListener","positionInput","getElementById","companyInput","descriptionInput","generateButton","console","log","clearButton","value","updateStorage","chrome","storage","sync","get","result","job_info","jobDetails","position","company","description","set","replaceButtonWithSpinner","disabled","innerHTML","restoreButton","fetch","method","headers","body","JSON","stringify","then","response","ok","json","data","Error","error","tabs","query","active","currentWindow","sendMessage","id","type","details","message"],"sourceRoot":""}